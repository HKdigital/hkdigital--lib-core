@define-mixin component-button-text {

  /* @note using CSS vars defined in the parent button postcss */

  [data-component="button"][data-type="text"] {
    @apply heading-font-family;
    @apply heading-font-weight;
    @apply heading-letter-spacing;
    @apply text-ui-base uppercase;
  }

  /* Size variants */
  [data-component="button"][data-type="text"][data-size="sm"],
  [data-component="button"][data-type="text"][data-size="md"],
  [data-component="button"][data-type="text"][data-size="lg"] {
    @apply rounded-sm;
    @apply py-8ut px-20ut;
  }

  /* Role-based styling for enabled buttons */
  [data-component="button"][data-type="text"]:not([disabled]) {
    &[data-role="primary"] {
      @apply border-width-normal;
      border-color: rgb(var(--btn-primary-border));
      background-color: rgb(var(--btn-primary-bg));
      color: rgb(var(--btn-primary-text));

      &:hover {
        border-color: rgb(var(--btn-primary-hover-bg));
        background-color: rgb(var(--btn-primary-hover-bg));
      }
    }

    &[data-role="secondary"] {
      @apply border-width-normal;
      border-color: rgb(var(--btn-secondary-border));
      color: rgb(var(--btn-secondary-text));
      background-color: var(--btn-secondary-bg);

      &:hover {
        background-color: rgb(var(--btn-secondary-hover-bg));
      }
    }
  }

  /* Disabled state */
  [data-component="button"][data-type="text"][disabled] {
    cursor: not-allowed;
    opacity: var(--btn-disabled-opacity);
  }
}
